{"version":3,"file":"fuzzify-pashto.umd.js","sources":["../src/fuzzify-pashto.ts"],"sourcesContent":["/**\n * Copyright (c) openpashto.com\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\ninterface FuzzifyOptions {\n  globalMatch?: boolean;\n  matchStart?: string;\n  matchWholeWordOnly?: boolean;\n  allowSpacesInWords?: boolean;\n  returnWholeWord?: boolean;\n}\n\n// Arabic punctuation to exclude\n// ، \\u060c ؟ \\u061f ؛ \\u061b ۔ \\u06d4\n// Digits etc. exclude \\u0660 - \\u066f\n\nconst pashtoCharacterRange = \"\\u0621-\\u065f\\u0670-\\u06d3\\u06d5\";\n// ISSUE: This does not work if the word is starting with a non-Pashto character like \" or « or .\n// I don't know how to solve this without lookbehinds in JavaScript (not available on all platforms)\n// Need to try all these ideas: https://stackoverflow.com/questions/641407/javascript-negative-lookbehind-equivalent\nconst pashtoWordBoundaryBeginning = `(^|[^${pashtoCharacterRange}])`;\n// TODO: Deal with diacritics etc.\n// .replace(/[\\u0600-\\u061e\\u064c-\\u0670\\u06D6-\\u06Ed]/g, '');\n\n// TOOD: handle \"\" input\n\n// TODO: add southern ش س (at beginning of word?)\n\nconst sSounds = \"صسثڅ\";\nconst zSounds = \"زضظذځژ\";\nconst tdSounds = \"طتټدډ\";\nconst velarPlosives = \"ګږکقگك\";\nconst rLikeSounds = \"رړڑڼ\";\nconst labialPlosivesAndFricatives = \"فپب\";\n// Includes Arabic ى \\u0649  \nconst theFiveYeys = \"ېۍیيئےى\";\n\nconst pashtoReplacer = {\n  \"اً\": { range: \"ان\" },\n  \"ا\": { range: \"اآهع\", plus: [\"اً\"] }, // TODO: make optional (if not at the beginning of word)\n  \"آ\": { range: \"اآه\" },\n  \"ٱ\": { range: \"اآه\" },\n  \"ٲ\": { range: \"اآه\" },\n  \"ٳ\": { range: \"اآه\" },\n\n  \"ی\": { range: theFiveYeys },\n  \"ي\": { range: theFiveYeys },\n  \"ې\": { range: theFiveYeys },\n  \"ۍ\": { range: theFiveYeys },\n  \"ئ\": { range: theFiveYeys },\n  \"ے\": { range: theFiveYeys },\n\n  \"س\": { range: sSounds }, \n  \"ص\": { range: sSounds },\n  \"ث\": { range: sSounds },\n  \"څ\": { range: sSounds },\n\n  \"ج\": { range: \"چجڅ\" }, \n  \"چ\": { range: \"چجڅ\" },\n  \n  \"ه\": { range: \"اهحہ\" },\n  \"ۀ\": { range: \"اهحہ\" },\n  \"ہ\": { range: \"اهحہ\" },\n\n  \"ع\": { range: \"اوع\", ignorable: true }, \n  \"و\": { range: \"وع\", ignorable: true }, \n  \"ؤ\": { range: \"وع\"},\n  \n  \"ښ\": { range: \"ښخشخهحغ\" },\n  \"غ\": { range: 'ښخشخهحغ' },\n  \"خ\": { range: 'ښخشخهحغ' },\n  \"ح\": { range: 'ښخشخهحغ' },\n\n  \"ش\": { range: 'شښ' },\n\n  \"ز\": { range: zSounds },\n  \"ض\": { range: zSounds },\n  \"ذ\": { range: zSounds },\n  \"ځ\": { range: zSounds },\n  \"ظ\": { range: zSounds },\n\n  \"ژ\": { range: 'زضظژذځږ' },\n\n  \"ر\": { range: rLikeSounds },\n  \"ړ\": { range: rLikeSounds },\n  \"ڑ\": { range: rLikeSounds },\n\n  \"ت\": { range: tdSounds },\n  \"ټ\": { range: tdSounds },\n  \"ٹ\": { range: tdSounds },\n  \"ط\": { range: tdSounds },\n  \"د\": { range: tdSounds },\n  \"ډ\": { range: tdSounds },\n  \"ڈ\": { range: tdSounds },\n\n  \"نب\": { range: 'نبم' },\n  \"ن\": { range: 'نڼ', plus: [\"اً\"] }, // allow for words using اٌ at the end te be seached for with ن\n  \"ڼ\": { range: 'نڼړڑ' },\n\n  \"ک\": { range: velarPlosives },\n  \"ګ\": { range: velarPlosives },\n  \"گ\": { range: velarPlosives },\n  \"ق\": { range: velarPlosives },\n\n  \"ږ\": { range: velarPlosives + 'ژ' },\n\n  \"ب\": { range: labialPlosivesAndFricatives },\n  \"پ\": { range: labialPlosivesAndFricatives },\n  \"ف\": { range: labialPlosivesAndFricatives },\n}\n\nconst thingsToReplace = Object.keys(pashtoReplacer);\nconst pashtoReplacerRegex = new RegExp(thingsToReplace.reduce((accumulator, currentValue, i) => {\n  if (i === thingsToReplace.length - 1) {\n    return accumulator + currentValue; \n  } \n  return accumulator + currentValue + \"|\";\n}, \"\"), \"g\");\n\nexport function fuzzifyPashto(input: string, options: FuzzifyOptions = {}): RegExp {\n  let safeInput = input.trim().replace(/[#-.]|[[-^]|[?|{}]/g, '');\n  if (options.allowSpacesInWords) {\n    safeInput = safeInput.replace(/ /g, '');\n  }\n  const regexLogic = safeInput.replace(pashtoReplacerRegex, (mtch) => {\n    const r = pashtoReplacer[mtch];\n    let range = `[${r.range}]`;\n    if (r.plus) {\n      const additionalOptionGroups = r.plus.reduce((t: string, o: string) => {\n        return t + o + \"|\";\n      }, \"\");\n      range = `(${additionalOptionGroups}${range})`;\n    }\n    return `${range}${r.ignorable ? '?' : ''}ع?${options.allowSpacesInWords ? '\\ ?' : ''}`\n  });\n  // Set how to begin the matching (default at the beginning of a word)\n  let beginning = options.matchStart === \"string\" ? \"^\" :\n                    options.matchStart === \"anywhere\" ? \"\" :\n                    pashtoWordBoundaryBeginning; // \"word\" is the default\n  let ending = \"\";\n  if (options.matchWholeWordOnly) {\n    if (options.matchStart === \"anywhere\") beginning = pashtoWordBoundaryBeginning;\n    ending = `(?![${pashtoCharacterRange}])`;\n  }\n  // If they're already using matchWholeWordOnly, don't change it\n  if (options.returnWholeWord && !options.matchWholeWordOnly) {\n    ending = `[${pashtoCharacterRange}]*(?![${pashtoCharacterRange}])`;\n    if (options.matchStart === \"anywhere\") {\n      beginning = `${pashtoWordBoundaryBeginning}[${pashtoCharacterRange}]*`; \n    }\n  }\n  const flags = `m${options.globalMatch === false ? '' : 'g'}`;\n  return new RegExp(`${beginning}${regexLogic}${ending}`, flags);\n}\n  "],"names":["pashtoCharacterRange","pashtoWordBoundaryBeginning","pashtoReplacer","اً","range","ا","plus","آ","ٱ","ٲ","ٳ","ی","ي","ې","ۍ","ئ","ے","س","ص","ث","څ","ج","چ","ه","ۀ","ہ","ع","ignorable","و","ؤ","ښ","غ","خ","ح","ش","ز","ض","ذ","ځ","ظ","ژ","ر","ړ","ڑ","ت","ټ","ٹ","ط","د","ډ","ڈ","نب","ن","ڼ","ک","ګ","گ","ق","ږ","velarPlosives","ب","پ","ف","thingsToReplace","Object","keys","pashtoReplacerRegex","RegExp","reduce","accumulator","currentValue","i","length","input","options","safeInput","trim","replace","allowSpacesInWords","regexLogic","mtch","r","t","o","beginning","matchStart","ending","matchWholeWordOnly","returnWholeWord","flags","globalMatch"],"mappings":"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"}