{"version":3,"file":"fuzzify-pashto.umd.js","sources":["../src/replacer.ts","../src/fuzzify-pashto.ts"],"sourcesContent":["/**\n * Copyright (c) openpashto.com\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// TODO: add southern ش س (at beginning of word?)\nconst sSounds = \"صسثڅ\";\nconst zSounds = \"زضظذځژ\";\nconst tdSounds = \"طتټدډ\";\nconst velarPlosives = \"ګږکقگك\";\nconst rLikeSounds = \"رړڑڼ\";\nconst labialPlosivesAndFricatives = \"فپب\";\n// Includes Arabic ى \\u0649  \nconst theFiveYeys = \"ېۍیيئےى\";\nconst guttural = \"ښخشخهحغ\";\n\nconst pashtoReplacerInfo = {\n  \"اً\": { range: \"ان\" },\n  \"ا\": { range: \"اآهع\", plus: [\"اً\"] }, // TODO: make optional (if not at the beginning of word)\n  \"آ\": { range: \"اآه\" },\n  \"ٱ\": { range: \"اآه\" },\n  \"ٲ\": { range: \"اآه\" },\n  \"ٳ\": { range: \"اآه\" },\n\n  \"ی\": { range: theFiveYeys },\n  \"ي\": { range: theFiveYeys },\n  \"ې\": { range: theFiveYeys },\n  \"ۍ\": { range: theFiveYeys },\n  \"ئ\": { range: theFiveYeys },\n  \"ے\": { range: theFiveYeys },\n\n  \"س\": { range: sSounds }, \n  \"ص\": { range: sSounds },\n  \"ث\": { range: sSounds },\n  \"څ\": { range: sSounds + \"چ\" },\n\n  \"ج\": { range: \"چجڅځژ\" }, \n  \"چ\": { range: \"چجڅځ\" },\n  \n  \"ه\": { range: \"اهحہ\" },\n  \"ۀ\": { range: \"اهحہ\" },\n  \"ہ\": { range: \"اهحہ\" },\n\n  \"ع\": { range: \"اوع\", ignorable: true }, \n  \"و\": { range: \"وع\", ignorable: true }, \n  \"ؤ\": { range: \"وع\"},\n  \n  \"ښ\": { range: guttural },\n  \"غ\": { range: guttural },\n  \"خ\": { range: guttural },\n  \"ح\": { range: guttural },\n\n  \"ش\": { range: \"شښ\" },\n\n  \"ز\": { range: zSounds },\n  \"ض\": { range: zSounds },\n  \"ذ\": { range: zSounds },\n  \"ځ\": { range: zSounds + \"جڅ\"},\n  \"ظ\": { range: zSounds },\n\n  \"ژ\": { range: \"زضظژذځږج\" },\n\n  \"ر\": { range: rLikeSounds },\n  \"ړ\": { range: rLikeSounds },\n  \"ڑ\": { range: rLikeSounds },\n\n  \"ت\": { range: tdSounds },\n  \"ټ\": { range: tdSounds },\n  \"ٹ\": { range: tdSounds },\n  \"ط\": { range: tdSounds },\n  \"د\": { range: tdSounds },\n  \"ډ\": { range: tdSounds },\n  \"ڈ\": { range: tdSounds },\n\n  \"نب\": { range: \"نبم\" },\n  \"ن\": { range: \"نڼ\", plus: [\"اً\"] }, // allow for words using اٌ at the end to be seached for with ن\n  \"ڼ\": { range: \"نڼړڑ\" },\n\n  \"ک\": { range: velarPlosives },\n  \"ګ\": { range: velarPlosives },\n  \"گ\": { range: velarPlosives },\n  \"ق\": { range: velarPlosives },\n\n  \"ږ\": { range: velarPlosives + \"ژ\" },\n\n  \"ب\": { range: labialPlosivesAndFricatives },\n  \"پ\": { range: labialPlosivesAndFricatives },\n  \"ف\": { range: labialPlosivesAndFricatives },\n};\n\nconst pashtoReplacerRegex = new RegExp(\n  Object.keys(pashtoReplacerInfo).join(\"|\"), \n  \"g\",\n);\n\nexport { pashtoReplacerInfo, pashtoReplacerRegex };\n","/**\n * Copyright (c) openpashto.com\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { pashtoReplacerRegex, pashtoReplacerInfo } from './replacer';\n\ninterface IFuzzifyOptions {\n  globalMatch?: boolean;\n  matchStart?: string; // TODO: This is breaking builds in CI \"word\" | \"string\" | \"anywhere\";\n  matchWholeWordOnly?: boolean;\n  allowSpacesInWords?: boolean;\n  returnWholeWord?: boolean;\n  es2018?: boolean;\n  ignoreDiacritics?: boolean;\n}\n\nconst pashtoCharacterRange = \"\\u0621-\\u065f\\u0670-\\u06d3\\u06d5\";\n// Unfortunately, without ES2018 lookbehind assertions word boundary matching is not as clean\n// Without lookbehind assertions, we are unable to ignore punctuation directly in front of a word\n// and matching results include a space before the word\nconst pashtoWordBoundaryBeginning = `(?:^|[^${pashtoCharacterRange}])`;\n// These problems are solved by using the ES2018 lookbehind assertions where environments permit\nconst pashtoWordBoundaryBeginningWithES2018 = `(?<![${pashtoCharacterRange}])`;\nconst diacritics = \"\\u064b-\\u065f\\u0670\\u0674\"; // pretty generous diactritic range\n\nfunction sanitizeInput(input: string, options: IFuzzifyOptions): string {\n  let safeInput = input.trim().replace(/[#-.]|[[-^]|[?|{}]/g, \"\");\n  if (options.allowSpacesInWords) {\n    safeInput = safeInput.replace(/ /g, \"\");\n  }\n  if (options.ignoreDiacritics) {\n    safeInput = safeInput.replace(new RegExp(`[${diacritics}]`, \"g\"), \"\");\n  }\n  return safeInput;\n}\n\nfunction prepareMainRegexLogic(sanitizedInput: string, options: IFuzzifyOptions): string {\n  return sanitizedInput.replace(pashtoReplacerRegex, (mtch) => {\n    const r = pashtoReplacerInfo[mtch];\n    let range = `[${r.range}]`;\n    if (r.plus) {\n      const additionalOptionGroups = r.plus.reduce((t: string, o: string) => {\n        return t + o + \"|\";\n      }, \"\");\n      range = `(${additionalOptionGroups}${range})`;\n    }\n    return `${range}${r.ignorable ? \"?\" : \"\"}ع?${options.ignoreDiacritics ? `[${diacritics}]?`: \"\"}${options.allowSpacesInWords ? \"\\ ?\" : \"\"}`;\n  });\n}\n\nfunction getBeginningWithAnywhere(options: IFuzzifyOptions): string {\n  // Override the \"anywhere\" when matchWholeWordOnly is true\n  if (options.matchWholeWordOnly) {\n    return pashtoWordBoundaryBeginning;\n  } \n  if (options.returnWholeWord) {\n    // Return the whole world even if matching from the middle (if desired)\n    return `${pashtoWordBoundaryBeginning}[${pashtoCharacterRange}]*`; \n  }\n  return \"\";\n}\n\nfunction prepareBeginning(options: IFuzzifyOptions): string {\n  // options.matchStart can be \"string\", \"anywhere\", or \"word\" (default)\n  if (options.matchStart === \"string\") {\n    return \"^\";\n  } \n  if (options.matchStart === \"anywhere\") {\n    return getBeginningWithAnywhere(options);\n  }\n  // options.matchStart default \"word\"\n  // return the beginning word boundary depending on whether es2018 is enabled or not\n  return options.es2018 ? pashtoWordBoundaryBeginningWithES2018 : pashtoWordBoundaryBeginning;\n}\n\nfunction prepareEnding(options: IFuzzifyOptions): string {\n  if (options.matchWholeWordOnly) {\n    return `(?![${pashtoCharacterRange}])`;\n  }\n  if (options.returnWholeWord) {\n    return `[${pashtoCharacterRange}]*(?![${pashtoCharacterRange}])`;\n  }\n  return \"\";\n}\n\nfunction prepareFlags(options: IFuzzifyOptions): string {\n  return `m${options.globalMatch === false ? \"\" : \"g\"}`;\n}\n\n// Main function for returning a regular expression based on a string of Pashto text\nexport function fuzzifyPashto(input: string, options: IFuzzifyOptions = {}): RegExp {\n  const sanitizedInput = sanitizeInput(input, options);\n  const mainRegexLogic = prepareMainRegexLogic(sanitizedInput, options);\n  const beginning = prepareBeginning(options);\n  const ending = prepareEnding(options);\n  const flags = prepareFlags(options);\n  return new RegExp(`${beginning}${mainRegexLogic}${ending}`, flags);\n}\n\n// Convienience function for testing if an environment supports lookbehind assertions\n// Lookbehind assertions allow for cleaner word matching. \n// (Punctuation directly in fron of the word is ignored and there is no extra space)\nexport function es2018IsSupported(): boolean {\n  let supported = true;\n  try {\n    // Test expression to see if environment supports lookbehind assertions\n    const a = new RegExp(\"(?<!a)b\");  \n  } catch(error) {\n    // Environment does not support lookbehind assertions in regex\n    // Must ignore this line for testing, because not all environments can/will error here\n    /* istanbul ignore next */ \n    supported = false;\n  }\n  return supported;\n}\n\n"],"names":[],"mappings":"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"}